{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","emailEntered","passwordEntered","email","ok","json","data","Error","expiresIn","toISOString","date","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f47df94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2MHEw\",\"control\":\"ProfileForm_control__15WZ_\",\"action\":\"ProfileForm_action__1BCG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1SiDt\",\"logo\":\"MainNavigation_logo__3A4V8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__ZiM4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3f2xO\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\n\r\nlet logoutTimer;\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime)=>{\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainigDuration = adjExpirationTime - currentTime;\r\n    return remainigDuration\r\n}\r\n\r\nconst retrieveStoredToken = ()=>{\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedExpirationDate = localStorage.getItem('expirationTime')\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate)\r\n\r\n  if(remainingTime <= 60000){\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationTime')\r\n    return null\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime\r\n  }\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken()\r\n  let initialToken;\r\n  if(tokenData){\r\n    initialToken= tokenData.token\r\n  }\r\n  // const initialToken= localStorage.getItem('token');\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  \r\n  // state functions like setToken React garantied never changes,clearTimeout and removeItem are javascript not react specefic function and logoutTime is out of React rendering view so never change  so dont need to add as dependency\r\n\r\n  const logoutHandler =useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationTime')\r\n    if(logoutTimer){\r\n      clearTimeout(logoutTimer)\r\n    }\r\n\r\n  },[]);\r\n\r\n  const loginHandler = (token,expirationTime) => {\r\n    setToken(token);\r\n     localStorage.setItem('token',token)\r\n     localStorage.setItem('expirationTime',expirationTime)\r\n\r\n     const remainingTime = calculateRemainingTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler,remainingTime)\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(tokenData){\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler,tokenData.duration)\r\n    }\r\n  },[tokenData])\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n \n  const authCtx = useContext(AuthContext)\n  const isLoggedIn = authCtx.isLoggedIn\n\n  const logoutHandler= ()=>{\n    authCtx.logout()\n    // optional: redirect the user\n  }\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && <li>\n            <Link to='/auth'>Login</Link>\n          </li>}\n          \n          {isLoggedIn && <li>\n            <Link to='/profile'>Profile</Link>\n          </li>}\n          {isLoggedIn && <li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li> }\n          \n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const history = useHistory()\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      `https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBym569JNYc0fbUOBgdHj_Dl79Jfxvq_0E\n  `,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(res =>{\n      // assumption: Always succeeds!\n      history.replace('/')\n    })\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" minLength='7' ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const history = useHistory()\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext)\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const emailEntered = emailInputRef.current.value;\n    const passwordEntered = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBym569JNYc0fbUOBgdHj_Dl79Jfxvq_0E`;\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBym569JNYc0fbUOBgdHj_Dl79Jfxvq_0E`;\n    }\n\n    fetch(\n      url,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: emailEntered,\n          password: passwordEntered,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json()\n        //...\n      } else {\n        return res.json().then((data) => {\n          // show an error modal\n          console.log(data);\n\n          let errorMessage = \"Authentication failed!\";\n          // if(data && data.error && data.error.message){\n          //   errorMessage= data.error.message\n          // }\n\n          throw new Error(errorMessage)\n\n          \n        });\n      }\n    }).then(data=> { \n      // console.log(data);\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000)\n\n      console.log(expirationTime);\n      console.log(expirationTime.toISOString);\n      const date= new Date()\n      console.log(date);\n\n      authCtx.login(data.idToken,expirationTime.toISOString())\n      history.replace('/')\n\n      \n    })\n    .catch(err => {\n      alert(err.message);\n    })\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n\n\n\n\n\n\n// // mal khodam \n// // To test a function and get back its return\n// function printElapsedTime(fTest) {\n//   let nStartTime = Date.now(),\n//       vReturn = fTest(),\n//       nEndTime = Date.now()\n\n//   console.log(`Elapsed time: ${ String(nEndTime - nStartTime) } milliseconds`)\n//   return vReturn\n// }\n\n// let yourFunctionReturn = printElapsedTime(yourFunction)\n\n\n// // Get the number of seconds since the ECMAScript Epoch\n// let seconds = Math.floor(Date.now() / 1000)\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n\n  \n\n\n  const authCtx = useContext(AuthContext)\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        \n        \n        {!authCtx.isLoggedIn && <Route path='/auth'>\n          <AuthPage />\n        </Route>}\n        {/* {authCtx.isLoggedIn && <Route path='/profile'>\n          <UserProfile />\n        </Route>} */}\n\n        // alternative way for Navigation Gard\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile/>}\n          {!authCtx.isLoggedIn && <Redirect to='/auth'/>}\n        </Route>\n        <Route path='*'>\n          <Redirect to='/'/>\n        </Route>\n        \n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport {AuthContextProvider} from './store/auth-context'\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__roYx7\",\"control\":\"AuthForm_control__2O881\",\"actions\":\"AuthForm_actions__3MtPg\",\"toggle\":\"AuthForm_toggle__2Sw6W\"};"],"sourceRoot":""}